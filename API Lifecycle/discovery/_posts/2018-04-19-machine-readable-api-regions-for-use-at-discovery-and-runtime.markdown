---
published: true
layout: post
title: Machine Readable API Regions For Use At Discovery And Runtime
date: 2018-04-19T09:00:00.000Z
tags:
  - API Evangelist
  - Regions
  - Definitions
  - Discovery
image: 'https://s3.amazonaws.com/kinlane-productions/amazon/aws-cloud-regions.png'
---
<p><img src="{{ page.image }}" width="45%" align="right" style="padding: 15px;" /></p>[I wrote about Werner Vogel of Amazon's post considering the impact of cloud regions a couple weeks back](http://apievangelist.com/2018/03/29/the-impact-of-availability-zones-regions-and-api-deployment-around-the-globe/). I feel that [his post](https://www.allthingsdistributed.com/2018/03/ten-years-of-aws-compartimentalization.html) captured an aspect of doing business in the cloud that isn't discussed enough, and one that will continue to drive not just the business of APIs, but also increasingly the politics of APIs. Amidst increasing digital nationalism, and growing regulation of not just the pipes, but also platforms, understanding where your APIs are operating, and what networks you are using will become very important to doing business at a global scale.

It is an area I'm adding to my list of machine readable API definitions I'd like to add to the [APIs.json](http://apisjson.org/) stack. The goal with APIs.json is to provide a single index where we can link to all the essential building blocks of a APIs operations, with [OpenAPI](https://www.openapis.org/) being the first URI, which provides a machine readable definition of the surface area of the APIs. Shortly after establishing the APIs.json specification, we also created [API Commons](http://apicommons.org/), which is designed to be a machine readable specification for describing the licensing applied to an API, in response to the Oracle v Google API copyright case. Beyond that, there hasn't been many other machine readable resources, beyond some existing API driven solutions used as part of API operations like Github and Twitter. There are other API definitions like Postman Collections and API Blueprint that I reference, but they are in the same silo as OpenAPI operates within.

Most of the resources we link to are still human-centered URLs like documentation, pricing, terms of service, support, and other essential building blocks of API operations. However, the goal is to evolve as many of these as possible towards being more machine readable. [I'd like to see pricing](https://apievangelist.com/2017/11/17/my-base-yaml-for-starter-api-plans/), terms of services, and aspects of support become machine readable, allowing them to become more automated and understood not just at discovery, but also at runtime. I'm envisioning that regions should be added to this list of currently human readable building blocks that should eventually become machine readable. I feel like we are going to be needing to make runtime decisions regarding API regions, and we will need major cloud providers like Amazon, Azure, and Google to describe their regions in a machine readable way--something that API providers can reflect in their own API definitions, depending on which regions they operate in.

At the application and client level, we are going to need to be able to quantify, articulate, and switch between different regions depending on the user, type of resources being consumed, and business being conducted. While this can continue being manual for a while, at some point we are going to need it to become machine readable so it can become part of the API discovery, as well as integration layers. I do not know what this machine readable schema will look like, but I'm sure it will be defined based upon what AWS, Azure, and Google are already up to. However, it will quickly need to become a standard that is owned by some governing body, and overseen by the community and not just vendors. I just wanted to plant the seed, and it is something I'm hoping will grow over time, but I'm sure it will take 5-10 years before something takes roots, based upon my experience with OpenAPI, APIs.json, and API Commons.
