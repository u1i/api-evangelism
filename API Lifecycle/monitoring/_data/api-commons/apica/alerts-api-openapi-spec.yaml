swagger: "2.0"
info:
  title: Alerts API
  description: The Alerts API.
  version: 1.0.0
host: api.serverdensity.io.
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /alerts/configs/alertId:
    "":
      summary: Deleting an alert
      description: ""
      operationId: deleting-an-alert
      parameters:
      - in: path
        name: alertId
        description: The ID of the alert to be deleted
        type: string
      - in: path
        name: token
        description: Your API token
        type: string
      - in: body
        name: token
        description: Your API token
        schema:
          $ref: '#/definitions/holder'
      - in: query
        name: token
        description: Your API token.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Alerts
  /alerts/configs/subjectId:
    "":
      summary: Listing alerts by subject
      description: Get a list of all configured alerts for a specific subject (device
        or service).
      operationId: listing-alerts-by-subject
      parameters:
      - in: path
        name: subjectId
        description: The ID of the subject e.g. the device ID
        type: string
      - in: path
        name: subjectType
        description: The type of the subject - device or service
        type: string
      - in: query
        name: subjectType
        description: The type of the subject - device or service
        type: string
      - in: path
        name: token
        description: Your API token.
        type: string
      - in: query
        name: token
        description: Your API token.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Alerts
  '/alerts/recipient ':
    ' post ':
      summary: Alerts Recipient
      description: ttttCreates a new recipient with one sms and one email target associated.ttt
      operationId: -alerts-recipient-
      responses:
        200:
          description: OK
      tags:
      - Alerts
  '/alerts/recipient/{recipient_id} ':
    ' put ':
      summary: Alerts Recipient {recipient_id}
      description: ttttUpdates recipient along with sms and email targets associated.ttt
      operationId: -alerts-recipient-recipient-id-
      responses:
        200:
          description: OK
      tags:
      - Alerts
  '/alerts/recipients ':
    ' get ':
      summary: Alerts Recipients
      description: ttttGets a list of all alert recipients targets that are visible
        to you as a customer.ttt
      operationId: -alerts-recipients-
      responses:
        200:
          description: OK
      tags:
      - Alerts
  '/alerts/recipients/{recipient_id} ':
    ' get ':
      summary: Alerts Recipients {recipient_id}
      description: ttttGets a information about alert recipients targets.ttt
      operationId: -alerts-recipients-recipient-id-
      responses:
        200:
          description: OK
      tags:
      - Alerts
  '/alerts/targets ':
    ' get ':
      summary: Alerts Targets
      description: ttttGets a list of all alert targets that are visible to you as
        a customer.ttt
      operationId: -alerts-targets-
      responses:
        200:
          description: OK
      tags:
      - Alerts
  /alerts/triggered:
    "":
      summary: Triggered alerts
      description: Get a list of all triggered alerts on your account, per subject
        (device or service) or per alert config.
      operationId: triggered-alerts
      parameters:
      - in: query
        name: closed
        description: Whether to filter by closed or open alerts - unset = all alerts,
          false = open alerts, true = closed alerts.
        type: string
      - in: query
        name: filter
        description: You can provide a JSON encoded hash filter for the search that
          will return items that match the filter. The filter can include anything
          that is available on the triggered data, or the config that the triggered
          data contains.
        type: string
      - in: query
        name: subjectType
        description: The type of the subject - device, service, deviceGroup or serviceGroup
          if you also specify the subjectId as part of the URL (see examples below)
        type: string
      - in: query
        name: token
        description: Your API token.
        type: string
      responses:
        200:
          description: OK
      tags:
      - Alerts
  '/alerts/{alert_id} ':
    ' delete ':
      summary: Alerts {alert_id}
      description: ttttDeletes alert by Id.ttt
      operationId: -alerts-alert-id-
      responses:
        200:
          description: OK
      tags:
      - Alerts
    ' get ':
      summary: Alerts {alert_id}
      description: ttttGets alert by Id.ttt
      operationId: -alerts-alert-id-
      responses:
        200:
          description: OK
      tags:
      - Alerts
    ' put ':
      summary: Alerts {alert_id}
      description: ttttUpdates alert.ttt
      operationId: -alerts-alert-id-
      responses:
        200:
          description: OK
      tags:
      - Alerts
  '/alerts/{alert_type} ':
    ' post ':
      summary: Alerts {alert_type}
      description: ttttCreates a new alert.ttt
      operationId: -alerts-alert-type-
      responses:
        200:
          description: OK
      tags:
      - Alerts
  ? '/alerts?check_id={check_id}&amp;severity={severity}&amp;enabled={enabled}&amp;target_type={target_type}&amp;target_id={target_id} '
  : ' get ':
      summary: Alerts?check_id={check_id}&amp;severity={severity}&amp;enabled={enabled}&amp;target_type={target_type}&amp;target_id={target_id}
      description: ttttGets alerts filtered by set of optional parameters.ttt
      operationId: -alertscheck-idcheck-idampseverityseverityampenabledenabledamptarget-typetarget-typeamptarget-idtarg
      responses:
        200:
          description: OK
      tags:
      - Alerts
definitions: []