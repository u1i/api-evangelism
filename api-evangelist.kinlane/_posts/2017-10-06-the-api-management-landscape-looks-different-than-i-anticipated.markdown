---
published: true
layout: post
title: The API Management Landscape Has Shifted More Than I Anticipated
date: 2017-10-06T11:00:00.000Z
tags:
  - API Evangelist
  - Management
image: >-
  https://s3.amazonaws.com/kinlane-productions/algo-rotoscope/stories/yellow-tree-in-the-rocks.jpg
---
<p><img src="https://s3.amazonaws.com/kinlane-productions/algo-rotoscope/stories/yellow-tree-in-the-rocks.jpg" align="right" width="40%" style="padding: 15px;" /></p>It is interesting to take a fresh look at the API management landscape these days. It has been a while since I've looked through all the providers to see where their pricing is at, and what they offer. I'd say the space has definitely shifted from what things looked like 2012 through 2015. There are still a number of open source offerings, which there weren't in 2012, but the old guard has solidly turned their attention to the enterprise. There are the cloud solutions like [Restlet](https://restlet.com/), ad [SlashDB](http://www.slashdb.com/) which really help you get up and running from existing data sources in the cloud, but for this particular project I am looking for a simple proxy and connector approach to deploying on any infrastructure, and they don't quite fit the requirements.

Apigee, and the other more enterprise offerings have always been out of my league, and 3Scale's entry level package is up to $750, which is a little out of my reach, but I do know they are open sourcing their offering, now that they are part of Red Hat. There is [API Umbrella](http://nrel.github.io/api-umbrella/), [APIMan](http://www.apiman.io/), [Fusio](http://www.fusio-project.org/), [Monarch](http://www.monarchapis.com/), and handful of other solutions that will work, but they take certain platform, or specific language commitment that doesn't work for this project. Everything else is of the enterprise caliber, nothing really that I would recommend to my customers who are just getting started on their API journey. I'm really left with the cloud giants, which I guess is one of the main reasons we are at this junction in the evolution of API management. API management becoming a commodity has really shifted the landscape, making it more difficult to be a strong player like [Tyk](https://s3.amazonaws.com/kinlane-productions/partners/tyk-logo.png) and Kong are managing to pull off.

If my customer was looking to launch a data API from an existing database I'd point them to SlashDb or Restlet. If they are an enterprise customer I'd point them to 3Scale. Tyk is pretty much my goto person for the lower end of the market, with Kong as the alternate. If my customer is already running on Google, Azure, or AWS, then I'm pretty much telling them to stay put, and use the tooling that is available to them. Another thing I'm noticing has dropped out of prominence is the billing for API usage aspect of API management. It's in Tyk, and 3Scale, but really wasn't a component of many of the other solutions I've been looking at. Overall things seem scattered out there after the last round of API management acquisitions, the VC funding shifted, and the cloud giants stepped into their game with their solutions. I'm guessing that is the just the circle of life and all.

In this new landscape I am going to have to spend more time playing with the low-end solutions that are available. It is essential that there are solutions that are accessible to folks who are just starting on their API journey. It is something that requires a climb-able ladder. Meaning you need to be able to afford the reach to the next rung of the ladder, otherwise it can become quite a blocker. I was a big advocate for this in the early days, but stopped pushing on because there were so many options out there. It will take some playing around to get a better feeling about where we are, before I feel good about making recommendations to new players again. A process I should probably be repeating each year, because things seem to be shifting a little more than I anticipated.
